plugins {
    id 'java'
}

group 'edu.jeznach'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'org.yaml:snakeyaml:1.21'
    compile 'org.jetbrains:annotations:16.0.2'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.6.0')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.6.0')
    compile group: 'com.diogonunes', name: 'JCDP', version: '4.0.1'
}

test {
    useJUnitPlatform()
}

task jarServer(type: Jar) {
    manifest {
        attributes 'Main-Class': 'edu.jeznach.po2.server.App'
    }
    classifier = 'server'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        exclude 'edu/jeznach/po2/client/**'
    }
    with jar
}

task jarClient(type: Jar) {
    manifest {
        attributes 'Main-Class': 'edu.jeznach.po2.client.App'
    }
    classifier = 'server'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        exclude 'edu/jeznach/po2/server/**'
    }
    with jar
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'